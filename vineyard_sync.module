<?php


//function vineyard_sync_node_insert($node) {
//  $sync = Vineyard_Sync::get_instance();
//
//  if (isset($sync->entities[$node->type]))
//    $sync->send($node);
//}

function vineyard_sync_menu()
{
  $items['vineyard/sync'] = array(
    'title' => 'Resync Vineyard Server',
    'page callback' => 'vineyard_sync',
    'access callback' => 'user_access',
    'access arguments' => array('administer content types'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function vineyard_sync()
{
  drupal_add_http_header('Content-Type', 'text/plain');

  $types = explode(' ',$_GET['type']);
  foreach($types as $type_name) {
    vineyard_sync_type($type_name);
  }
}

function vineyard_sync_type($type_name) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', $type_name);

  if (isset($_GET['limit']))
    $query->range(0, $_GET['limit']);

  $result = $query->execute();

  $nids = array();
  foreach ($result['node'] as $entity) {
    $nids[] = $entity->nid;
  }
  $entities = entity_load('node', $nids);

  $sync = Vineyard_Sync::get_instance();

  foreach ($entities as $entity) {
    $sync->send($entity, $type_name);
//    print_r($entity);
  }
}

function vineyard_sync_entity_insert($entity, $type)
{
  $sync = Vineyard_Sync::get_instance();
//  print("type=$type");
  $sync->send($entity, $type);
}

function vineyard_sync_entity_update($node, $type)
{
  $sync = Vineyard_Sync::get_instance();

//  if (isset($sync->nodes[$node->type]))
  $sync->send($node, $type);
}

function vineyard_sync_entity_delete($node, $type)
{
//  print 'deleting';
  $sync = Vineyard_Sync::get_instance();

//  if (isset($sync->entities[$node->type]))
  $sync->send($node, $type, true);
}